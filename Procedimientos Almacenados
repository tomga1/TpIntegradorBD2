-- SP_RegistrarUsuarios,
-- permite registrar un nuevo usuario en el sistema. Antes de realizar el alta,
-- valida que no exista otro usuario con el mismo CUIT para evitar duplicados. 
-- Si la validación es exitosa, se inserta el nuevo registro con su nombre, CUIT, contraseña y rol asignado.


CREATE PROCEDURE SP_RegistrarUsuarios
    @Nombre NVARCHAR(100),
    @Apellido NVARCHAR(100),
    @Direccion NVARCHAR(100),
    @CUIT VARCHAR(20),
    @Telefono VARCHAR(20),
    @Contraseña NVARCHAR(100),
    @IDRol INT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM Usuarios WHERE CUIT = @CUIT)
    BEGIN
        RAISERROR('El CUIT ya está registrado.', 16, 1);
    END
    ELSE
    BEGIN
        INSERT INTO Usuarios (
            Nombre, Apellido, Direccion, CUIT, Telefono, Contraseña, id_rol, id_estado, Fecha_Alta
        )
        VALUES (
            @Nombre, @Apellido, @Direccion, @CUIT, @Telefono, @Contraseña, @IDRol, 1, GETDATE()
        );
    END
END

-- ------------------------------------------------------------------------

--SP_ReservasOK,
--Nos permite registrar una reserva verificando que ya no exista,
--Una en el horario y fecha indicada
--En caso que se quiera registar en el mimso día y horario, nos tira un error,


CREATE PROCEDURE SP_ReservasOK
    @IDUsuario INT,
	@IDEstado INT,
    @HoraInicial DATETIME,
    @HoraFinal DATETIME,
    @FechaReserva DATETIME,
    @ValorCanchas MONEY
AS
BEGIN
    IF EXISTS (SELECT 1 FROM Reservas WHERE hora_inicio = @HoraInicial)
    BEGIN
        RAISERROR ('El horario ya se encuentra reservado', 16, 1);
        RETURN;
    END
    ELSE
    BEGIN
        INSERT INTO Reservas (id_usuario,id_estado, hora_inicio, hora_fin, fecha_reserva, monto_total)
        VALUES (@IDUsuario ,@IDEstado, @HoraInicial, @HoraFinal, @FechaReserva, @ValorCanchas);
    END
END;
