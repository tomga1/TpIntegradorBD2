-- Creamos el trigger TR_BajaLogicaCanchas el cual evita el borrado físico de registros en la tabla Cancha. 
-- En lugar de eliminar la cancha cuando se ejecuta un DELETE, realiza una baja lógica, 
-- actualizando el campo id_estado a 2 (estado inactivo)

CREATE TRIGGER TR_BajaLogicaCanchas 
ON Canchas
INSTEAD OF DELETE
AS 
BEGIN
    BEGIN TRY
        BEGIN TRANSACTION
        UPDATE c
        SET id_estado = 2
        FROM Canchas c
        JOIN deleted d ON c.id_cancha = d.id_cancha
        COMMIT TRANSACTION
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION
    END CATCH
END;

-- --------------------------------------------------------------------------------------
-- Creamos el trigger TR_CerrarPromocionesVencidas el cual actualiza automáticamente el estado
-- de las promociones insertadas o actualizadas que ya se encuentren vencidas.
-- Si la fecha de fin de una promoción recién agregada o modificada ya pasó,
-- el trigger cambia su id_estado a 2 (inactivo), evitando que se apliquen promociones caducadas.

CREATE TRIGGER TR_CerrarPromocionesVencidas
ON Promociones
AFTER INSERT, UPDATE
AS
BEGIN
    UPDATE p
    SET id_estado = 2 -- Inactivo
    FROM Promociones p
    INNER JOIN inserted i ON p.id_promocion = i.id_promocion
    WHERE i.fecha_fin < GETDATE() AND i.id_estado = 1;
END;





